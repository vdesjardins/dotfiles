#!/bin/bash

alias eag="$EDITOR ~/dotfiles/shells/gcp; source ~/dotfiles/shells/gcp"

alias gpl="gcloud projects list"

alias gbl="gcloud builds list --project corp-admin --ongoing"
alias gblog="gcloud builds log --project corp-admin"

function gcp-project-id() {
        local project=${1:?project name madatory}
        gcloud projects list | grep ${project} | awk '{ print $1; }'
}
alias gpi=gcp-project-id

function gcp-list-ip() {
        for p in $(gcloud projects list --format 'table[no-heading](projectId)'); do
                gcloud services list --project $p | grep compute.googleapis.com >/dev/null 2>&1
                if [[ $? == 0 ]]; then
                        result=$(gcloud compute addresses list --project $p 2>&1)
                        if [[ ${result} != "Listed 0 items." ]]; then
                                echo "***** ${p} *****"
                                echo ${result}
                        fi
                fi
        done
}

function gke-resolve-project() {
        local env=${1:?error cluster name mandatory}
        if [[ ${env} == "" ]]; then
                echo "Missing argument cluster"
                return 1
        fi

        case "$1" in
        'prod1')
                echo "prod-gke-230115"
                ;;
        'dev1')
                echo "devl-gke-230115"
                ;;
        'labo1')
                echo "labo-gke-237917"
                ;;
        *)
                return 1
                ;;
        esac
}

function gke-info() {
        local cluster=${1:?Error cluster name mandatory}

        local PROJECT=$(gke-resolve-project ${cluster})
        if [[ $? != 0 ]]; then
                echo >&2 "invalid argument"
                return 1
        fi

        gcloud container clusters list --project $PROJECT --format="table[box,title='Master ($PROJECT)'](NAME, MASTER_VERSION, MASTER_IP, NUM_NODES, STATUS)"

        gcloud container node-pools list --cluster ${cluster} --project $PROJECT --region "northamerica-northeast1" --format="table[box,title='Nodepools ($1)'](NAME, MACHINE_TYPE, DISK_SIZE_GB, NODE_VERSION)"
}

function gke-nodepool-info() {
        local cluster=${1:?error cluster name madatory}
        shift

        local PROJECT=$(gke-resolve-project ${cluster})
        if [[ $? != 0 ]]; then
                echo >&2 "invalid argument"
                return 1
        fi

        gcloud container node-pools describe --cluster ${cluster} --project $PROJECT --region "northamerica-northeast1" "$@"
}
