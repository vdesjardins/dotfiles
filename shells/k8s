#!/bin/bash

function cluster-switch() {
    local cluster=${1}

    if [[ ${cluster} == "" ]]; then
        cluster=$(kubectl config get-contexts | tail -n +2 | awk '{ print $2; }' | fzf)
    fi

    if [[ ${cluster} == "" ]]; then
        echo "no cluster provided."
        return 1
    fi

    local session_name=shell-${cluster}

    if tmux list-session | cut -d':' -f1 | grep ${session_name}; then
        tmux switch-client -t ${session_name}
        return
    fi

    local dir=$(mktemp -d)
    local kubeconfig=${dir}/config
    local startup_script=${dir}/startup-script.sh
    cp ~/.kube/config ${dir}/config

    cat <<-EOT >${startup_script}
export KUBECONFIG=${kubeconfig}
kubectl config use-context ${cluster}
zsh
EOT
    chmod +x ${startup_script}

    tmux new-session -d -s ${session_name} ${startup_script}
    tmux setenv -t ${session_name} KUBECONFIG=${kubeconfig}
    tmux switch-client -t ${session_name}
}
alias csw=cluster-switch

function namespace-switch() {
    local ns=${1}
    if [[ ${ns} == "" ]]; then
        ns=$(kubectl get namespaces | tail -n +2 | awk '{ print $1; }' | fzf)
    fi

    if [[ ${ns} == "" ]]; then
        echo "no namespace provided."
        return 1
    fi

    kubectl config set-context $(kubectl config current-context) --namespace="$ns"
}
alias ksw=namespace-switch

# vim: ft=sh
